services:
  proxy:
    build:
      context: ./proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy:/proxy
    tty: true
    restart: always
    networks:
      matrix_network:
        ipv4_address: 10.254.100.5

  web:
    build:
      context: ./web
    ports:
      - "4173:4173"
    environment:
      - ENV_VAR=test_value
    volumes:
      - ./web:/web
    tty: true
    restart: always
    networks:
      matrix_network:
        ipv4_address: 10.254.100.10

  federation_orchestrator:
    build:
      context: ./federation_orchestrator
    ports:
      - "5000:5000"
    volumes:
      - ./federation_orchestrator:/app/federation_orchestrator
    tty: true
    restart: always
    networks:
      matrix_network:
        ipv4_address: 10.254.100.20
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  matrix_whale:
    build:
      context: ./matrix_whale
    environment:
      - ENV_VAR=test_value
    ports:
      - "8080:8080"
      - "6000:6000"
    tty: true
    restart: always
    volumes:
      - ./matrix_whale:/matrix_whale
    depends_on:
      - db
    networks:
      matrix_network:
        ipv4_address: 10.254.100.30
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  rss_feed_adapter:
    build:
      context: ./rss_feed_adapter
    ports:
      - "8085:8085"
    volumes:
      - ./rss_feed_adapter:/app/rss_feed_adapter
    tty: true
    restart: always
    networks:
      matrix_network:
        ipv4_address: 10.254.100.41
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  noaa_adapter:
    build:
      context: ./noaa_adapter
    environment:
      - ENV_VAR=test_value
    tty: true
    restart: always
    volumes:
      - ./noaa_adapter/app:/app
    depends_on:
      - matrix_whale
    networks:
      matrix_network:
        ipv4_address: 10.254.100.40

  db:
    build:
      context: ./db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    tty: true
    restart: always
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/data:/var/lib/postgresql/data
    networks:
      matrix_network:
        ipv4_address: 10.254.100.50
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  matrix_network:
    ipam:
      driver: default
      config:
        - subnet: 10.254.100.0/24